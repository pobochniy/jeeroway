@page "/overview"

<style>
</style>

<h1>Обзор робо-платформы</h1>

<div class="row">
    <div class="col-md-12">
        <h5>Ядром робота служит Raspberry Pi</h5>
        Для простоты буду называть его малиной. Если провести аналог с человеком, то малина выполняет роль головного мозга.
        Основные задачи, которые она решает:
        <ul>
            <li>Установление связи с платформой, через которую будет осуществляться управление.</li>
            <li>Транслирование видео, чтобы пользователь мог осуществлять управление своим роботом</li>
            <li>Передача управляющих команд на Искру (аналог ардуино), которая отвечает за механику (моторы)</li>
        </ul>
        <p>
            Разберём подробнее все пункты:
        </p>
        <p>
            <h5>Связь</h5>
            Установление связи рассматривается только через сеть интернет. Для того, чтобы можно было управлять роботом из любой точки мира.
            Связь через радио или блютус по этим соображениям даже не рассматривается и не разбирается.<br />
            Связь возможна в двух режимах:
            <ul>
                <li>
                    Первый режим через Wi-Fi. Такая связь возможна, если робот находится в пределах досигаемости Wi-fi с доступным интернетом, например, в домашней сети.
                    Из плюсов идёт простота, так как вайфай уже встроен в любую малину. Таким образом, если вы только строите робота, это самый простой способ для отладки всех функций робота.
                </li>
                <li>
                    Второй режим подразумевает подключение к малине модуля 4G/5G мобильной связи и наличие активной sim-карты.
                    Тут придётся выполнить дополнительные манипуляции, но именно это позволит делать выезды, например в лес или на замусоренные пляжи.<br />
                    <span style="font-style:italic">
                        Сейчас 4G связь доступна практически везде, но, если по каким-либо причинам данная связь недоступна, то всегда будет возможность навигатору подключиться
                        к спутниковому интернету и раздать вайфай на лагерь роботов
                    </span>
                </li>
            </ul>
        </p>
        <p>
            <h5>Про видео</h5>
            Вопрос снятия видео, затем его обработку (сжатие) и пересылку по интернету занимает львиную долю вычислительных ресурсов.
            Для управления роботом требуется как можно меньший отклик. Это основная задача, которая ставится перед транслированием видео.
            Оптимальный вариант, так как нам не требуется передавать звуковую дорожку, это снимать покадрово и отправлять отдельные изображения в формате jpg,
            затем склеивать эти изображения. Таким образом человеческий глаз воспринимает эти изображения непрерывно, собственно, как видео.<br />
            С задачей покадровой съёмки справится практически любая камера, подключаемая через шлейф. Камеры, подключаеме через usb не подойдут, так как usb является очень слабым каналом и задержка воспроизведения будет неприлично большой.
            Тем не менее, задача сжатия кадров и пересылки видеопотока ложится на центральный процессор и одна лишь передача видео занимает практически все ресурсы центрального процессора малины и канала связи.<br />
            <span style="font-style:italic">
                Если получится переложить процесс обработки на видеопроцессор - будет замечательно.
            </span>
        </p>
        <p>
            <h5>По механической части</h5>
            Робот представляет из себя гусеничную платформу с двумя DC-моторами, по одному на гусеницу, и захват-манипулятор на 6 серво-моторов.
            Теоретически этот обвес можно подключить напрямую к малине, но... мы не забываем про то, что,
            <ul>
                <li>
                    Во-первых, ресурсы малины уже на пределе
                </li>
                <li>
                    Во-вторых, напрямую моторы в любом случае не подключить, потребуются дополнительные платы, драйвера моторов
                </li>
                <li>
                    В-третьих, при подключении большого количества сервомоторов и датчиков даже на ардуино-мега наблюдается нехорошее явление, сервоприводы начинают неприятно дрожать.
                    Это видно, например, если делать робота-паука
                </li>
            </ul>
            Логичным решением для разруливания этой ситуации является перенос управления механикой на отдельную плату. Если хотите аналогий, то эта плата будет выполнять роль спинного мозга. Мой выбор пал на плату <a href="https://www.youtube.com/watch?v=EsC9xBMojHM&list=PLfDmj22jP9S4K9uJVQFVH3mO6ROzyrdP_&index=2&ab_channel=AmperkaRu" target="_blank">Iskra.js</a> - флагманская плата проекта <a href="https://amperka.ru/product/iskra-js" target="_blank">amperka.ru</a>.
            Если в кратце, то это доработанный espruino, аналог arduino, только с программированием на javascript. Ребята из амперки реально молодцы, они проделали огромную работу
            над устранением электронной составляющей, например, можно подключать датчики с питанием как 3.3 вольта, так и 5 вольт. Есть обратная совместимость,
            любые датчики для Ардуино подходят и для Искры. Самое главное, что определило мой выбор, удобство разработки и отладки: есть моя любимая js консоль, в которую можно напрямую слать команды без перезаливки кода.
        </p>
        @*У меня в наличии уже устаревшая Raspberry Pi 3 model b+.*@
    </div>
</div>
@*<div class="row">
        <div class="col-md-6">
            <img class="preview" src="@Environments.ImgHref("/Img/View/1/185cb5a1-98d8-4b1b-c087-08d910c27247")" />
        </div>
        <div class="col-md-6">
            <img class="preview" src="@Environments.ImgHref("/Img/View/1/ce9c1ad3-a872-4cd6-c089-08d910c27247")" />
        </div>
    </div>*@