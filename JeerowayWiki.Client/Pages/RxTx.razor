@page "/rxtx"

<style>
    img.preview {
        max-width: 300px;
    }
</style>

<h1>Связь Raspberry Pi с Iskra.js</h1>

<div class="row">
    <div class="col-md-12">
        <h5>Описание</h5>
        Почему выбрана именно такая конфигурация (малина + искра) рассказано в разделе Описание. Вкратце, малина представляет из себя полноценный мини-комьютер,
        линукс-станцию. Отвечает за высокоуровневые операции, такие как установка связи по сети интернет, транслирование видео, открытие сокетов для управления роботом.<br />
        В свою очередь за управление всей механической частью отвечает Iskra.js - это контроллер, на котором нет операционной системы.
        К Искре подключены, с помощью шилдов, моторы для перемещения робота и сервоприводы для управления рукой-захватом.<br />
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <br />
        <h5>Iskra JS программное обеспечение Web IDE</h5>
        <a href="https://amperka.ru/product/iskra-js" target="_blank">Iskra JS</a> — флагманская плата Амперки с встроенным интерпретатором JavaScript.<br />
        Для программирования используется JavaScript, особенности использования которого подробно описаны <a href="http://wiki.amperka.ru/js:start" target="_blank">в специальном разделе вики Амперки</a>.<br />
        Разработка ведётся в среде <a href="http://wiki.amperka.ru/js:ide" target="_blank">Espruino Web IDE</a>, которая устанавливается в 1 клик: Web IDE — это приложение для Google Chrome.
        То есть, это приложение, которое устанавливается в расширения браузера Google Chrome.
        Бонусом идёт то, что в операцонную систему Raspbian (на малине) по умолчанию установлен браузер на движке хрома и на нём так же работает эта Web IDE.
        Таким образом вы можете работать с Искрой, подключив её как к стационарному комьютеру или ноутбуку, так и напрямую с малины.
        Для этого желательно прикупить маленький монитор на алишке, либо даже есть вариант использовать монитор от старого ноутбука, но всё равно придётся докупить переходник на hdmi.<br />
        Для установки Web IDE достаточно из браузера пройти по <a href="https://chrome.google.com/webstore/detail/espruino-web-ide/bleoifhkdalbjfbobjackfdifdneehpo" target="_blank">ссылке на приложение</a><br />
        Затем применить настройки, специфичные для Искры, <a href="http://www.espruino.com/webide?settings=%7B%22MODULE_URL%22%3A%22http%3A%2F%2Fjs.amperka.ru%2Fmodules%22%2C%22BOARD_JSON_URL%22%3A%22http%3A%2F%2Fjs.amperka.ru%2Fjson%22%2C%22SAVE_ON_SEND%22%3Atrue%7D" target="_blank">пройдя по вот этой ссылке</a>.
        Настройки нужны, чтобы использовать библиотеки Амперки именно для Искры. Вообще, данная IDE писалась изначально под espruino (аналог ардуино на js).
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <br />
        <h5>Настраиваем последовательный порт RxTx</h5>
        В классической связке Искра подключается к малине с помощью usb порта. Теоретически, можно переопределить этот порт и отпавлять системные команды так же через usb.
        Главное, не забудьте на какую-нибудь анаоговую кнопку повесить сброс настроек, ведь после такого изменения уже нельзя будет пользоваться Web IDE.<br />
        Поэтому для дополнительного соединения мы будем использовать другой порт, последовательный порт устройства.<br />
        Последовательный порт устройства имеет два контакта, это пин Tx - transmute, передача данных. И пин Rx - receive, приём данных.<br />
        Когда вы соединяете два устройства между собой, пин Tx должен входить в Rx, а пин Rx, соответственно, в Tx другого устройства.
        Так же необходимо не забывать, что земля должна быть соединена между устройствами.<br />
        Подробнее про последовательный порт рассказано вот в этом видео:<br />
        <iframe width="560" height="315" src="https://www.youtube.com/embed/yvre1qubwW4" title="YouTube serial instruction" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><br /><br />
        В Искре на пинах 0 и 1 располагается Serial3, в программе будем работать с этим объектом.<br />
        Итак, чтобы соединить две платы правильно, нам нужно знать распиновку на обоих платах. Для малины вот такая картина:<br />
        <img class="preview" src="@Environments.ImgHref("/Img/View/4/534ff207-346d-429d-4bf9-08d934e8ec2b")" /><br />
        Мы будем использовать пин GPIO14 (TX) и GPIO15 (RX).<br />
        На искре порты подписаны прям на плате, на всякий случай так же даю схему распиновки:<br />
        <img class="preview" src="@Environments.ImgHref("/Img/View/4/34e12c47-db13-46d2-4bfb-08d934e8ec2b")" /><br />
        Таким образом пин GPIO14 втыкаем в P0, пин GPIO15 втыкаем в P1. Не забываем объединить землю, пины GND на обоих устройствах.<br />
        <br />
        Имея подключение через два независимых канала мы получаем невероятное преимущество в отладке. Подключившись через Web IDE по usb мы видим консоль на экране,
        на которую можем выводить любую отладочную информацию, в том числе всё, что приходит через последовательный порт устройства.
        То есть нет никаких чёрных ящиков и программирования вслепую. Те данные, которые отправляем через интернет на малину затем передаём через последовательный порт
        и тут же видим в реальном времени все полученные данные.
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <br />
        <h5>Немного кода</h5>
        <div class="alert alert-secondary mt-4" role="alert">
            <span style="font-size: 14px;"><span class="oi oi-terminal mr-2" aria-hidden="true"></span>Пример скетча для подключённого сервомотора через плату Multiservo shield</span><br />

            <br />// Подключаемся к последовательному порту
            <br />Serial3.setup(9600);
            <br />var buffer = '';
            <br />var on = true;
            <br />
            <br />//Подключаемся к сервоприводу
            <br />PrimaryI2C.setup({sda: SDA, scl: SCL, bitrate: 400000});
            <br />var mServo = require('@@amperka/multiservo').connect(PrimaryI2C);
            <br />var s0 = mServo.connect(0);
            <br />
            <br />//Функция приёма данных, вначале складывает в буфер
            <br />//при получении команды go; вызывается соответствующая функция
            <br />Serial3.on('data', function(data){
            <br />//print(data);
            <br />buffer += data;
            <br />if(data == ';'){
            <br />print(buffer);
            <br />switch(buffer){
            <br />case 'go;': go();
            <br />break;
            <br />}
            <br />buffer = '';
            <br />}
            <br />});
            <br />
            <br />function go(){
            <br />on = !on;
            <br />print('go('+on+')');
            <br />s0.write(on ? 0 : 180);
            <br />}
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <h5>Ошибки</h5>
        Первое, что может случиться, это то, что последовательный порт на малине отключён.<br />
        Идём в пуск, находим там, Raspberry Pi Configuration. Пункт Serial ставим в Enable<br />
        <br />Второе, на малине по умолчанию на последовательном порте висит blooetooth (досадное недоразумение). Его придётся отключить.
        <SurveyPrompt Title="Открываем в терминале файл с настройками" Text="sudo nano /boot/config.txt" />
        <SurveyPrompt Title="Дописываем в конец файла" Text="dtoverlay=disable-bt" />
        Сохраняемся и выходим. Так же нужно отключить сопутствующие сервисы:
        <SurveyPrompt Title="Выполняем" Text="sudo systemctl disable bluealsa.service" />
        <SurveyPrompt Title="У меня не работало, но на всякий случай" Text="sudo systemctl disable bluealsa.service" />
        <SurveyPrompt Title="Выполняем" Text="sudo systemctl disable bluetooth.service" />
        <SurveyPrompt Title="Перезагружаемся как тру-линуксоиды" Text="sudo reboot" />
        Бонус, можно попробовать покидать команды прямо из терминала в Искру, что-то такое:
        <SurveyPrompt Title="" Text="@("Sudo echo \"go();\" > /dev/ttyAMA0")" />
        <SurveyPrompt Title="" Text="@("Sudo echo \"go();\" > /dev/ttyACM0")" />
        <SurveyPrompt Title="" Text="@("Sudo echo \"go();\" > /dev/ttyS0")" />
        <br />Третье, если выдаёт ошибку про недостаточность прав:
        <SurveyPrompt Title="Даём права пользователю на порт" Text="sudo chmod a+rw /dev/ttyACM0" />
        Оставлю тут пока <a href="https://oss-it.ru/171" target="_blank">ссылку на инструкцию</a>, как данную команду добавить в автозагрузку. Если знаете как сделать по феншую, напишите в личку или <a href="https://vk.com/jeeroway" target="_blank">в группу вк</a>.
    </div>
</div>
<br />
<br />
<br />